name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 'stable'

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -v -o build/epub-to-md-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: epub-to-md-${{ matrix.goos }}-${{ matrix.goarch }}
        path: build/epub-to-md-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

  release:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: List files
      run: ls -R
      
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: epub-to-md-*/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
